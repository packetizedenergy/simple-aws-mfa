#!/usr/bin/env node

const argv = require('minimist')(process.argv.slice(2));
const shell = require('shelljs');

const ONE_HOUR_SEC = 60 * 60;

const [
    mfaARN,
    token,
    durationSeconds = ONE_HOUR_SEC,
] = argv._;

const profile = argv.profile || process.env.AWS_DEFAULT_PROFILE || 'default';

const USAGE = `
usage: simple-aws-mfa <mfa-arn> <mfa-token> [<duration-seconds>] [--profile <aws-profile-name>]

where:
    <mfa-arn>                       is the ARN of the user's MFA device
    <mfa-token>                     is the code generated by the MFA device
    <duration-seconds>              is how long the assumed session should remain valid
    --profile <aws-profile-name>    is the name of the AWS CLI profile to use
                                    see https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html
`;

if (!mfaARN || !token){
    console.error('Missing MFA ARN or MFA Token');
    console.error(USAGE);
    process.exit(1);
}

const stsCommand = `aws sts get-session-token --serial-number ${mfaARN} --token-code=${token} --duration-seconds=${durationSeconds} --profile=${profile}`;
const response = shell.exec(stsCommand, { silent : true });

if (response.code !== 0) {
    console.error(`${stsCommand}\n${response.code} ${response.stderr}`);
    process.exit(2);
} else {
    const payloadString = response.stdout;
    const stsResponse = JSON.parse(payloadString);
    const commands = [
        `export AWS_SECRET_ACCESS_KEY='${stsResponse.Credentials.SecretAccessKey}'`,
        `export AWS_SESSION_TOKEN='${stsResponse.Credentials.SessionToken}'`,
        `export AWS_ACCESS_KEY_ID='${stsResponse.Credentials.AccessKeyId}'`,
    ];
    console.log(commands.join('\n'));
}
